{"ast":null,"code":"var _jsxFileName = \"/Users/patrikveksler/DEV/GitHub/React_Course/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2021\"); // MY SOLUTION\n  // const [filteredExpenses, setFilteredExpenses] = useState([]);\n  // const expensesArr = [];\n  // useEffect(() => {\n  //   props.expenses.filter((item) => {\n  //     // console.log(\"filteredYear\", parseInt(filteredYear));\n  //     // console.log(\"item.date.getFullYear()\", item.date.getFullYear());\n  //     if (item.date.getFullYear() === parseInt(filteredYear)) {\n  //       expensesArr.push(item);\n  //     } else setFilteredExpenses([]);\n  //     setFilteredExpenses(expensesArr);\n  //   });\n  // }, [filteredYear, props.expenses]);\n  // INSTRUCTOR SOLUTION !!!\n\n  const filteredExpenses = props.expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filterChangedHandler = selectedYear => {\n    setFilteredYear(selectedYear); // props.expenses.filter\n  };\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No expenses found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }, this), filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"mdIsaHWtxuZbTDv6nUGN/ApvXr0=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","Card","ExpenseItem","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filteredExpenses","expenses","filter","expense","date","getFullYear","toString","filterChangedHandler","selectedYear","expensesContent","length","map","title","amount","id"],"sources":["/Users/patrikveksler/DEV/GitHub/React_Course/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  // MY SOLUTION\n  // const [filteredExpenses, setFilteredExpenses] = useState([]);\n  // const expensesArr = [];\n\n  // useEffect(() => {\n  //   props.expenses.filter((item) => {\n  //     // console.log(\"filteredYear\", parseInt(filteredYear));\n  //     // console.log(\"item.date.getFullYear()\", item.date.getFullYear());\n\n  //     if (item.date.getFullYear() === parseInt(filteredYear)) {\n  //       expensesArr.push(item);\n  //     } else setFilteredExpenses([]);\n\n  //     setFilteredExpenses(expensesArr);\n  //   });\n  // }, [filteredYear, props.expenses]);\n\n  // INSTRUCTOR SOLUTION !!!\n  const filteredExpenses = props.expenses.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const filterChangedHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    // props.expenses.filter\n  };\n\n  let expensesContent = <p>No expenses found</p>;\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ));\n  }\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangedHandler}\n      />\n      {filteredExpenses.length === 0 && <p>No expenses found</p>}\n      {filteredExpenses.length > 0 &&\n        filteredExpenses.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))}\n    </Card>\n  );\n};\n\nexport default Expenses;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD,CAD0B,CAG1B;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;;EACA,MAAMQ,gBAAgB,GAAGH,KAAK,CAACI,QAAN,CAAeC,MAAf,CAAuBC,OAAD,IAAa;IAC1D,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CR,YAAjD;EACD,CAFwB,CAAzB;;EAIA,MAAMS,oBAAoB,GAAIC,YAAD,IAAkB;IAC7CT,eAAe,CAACS,YAAD,CAAf,CAD6C,CAE7C;EACD,CAHD;;EAKA,IAAIC,eAAe,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAtB;;EAEA,IAAIT,gBAAgB,CAACU,MAAjB,GAA0B,CAA9B,EAAiC;IAC/BD,eAAe,GAAGT,gBAAgB,CAACW,GAAjB,CAAsBR,OAAD,iBACrC,QAAC,WAAD;MAEE,KAAK,EAAEA,OAAO,CAACS,KAFjB;MAGE,MAAM,EAAET,OAAO,CAACU,MAHlB;MAIE,IAAI,EAAEV,OAAO,CAACC;IAJhB,GACOD,OAAO,CAACW,EADf;MAAA;MAAA;MAAA;IAAA,QADgB,CAAlB;EAQD;;EAED,oBACE,QAAC,IAAD;IAAM,SAAS,EAAC,UAAhB;IAAA,wBACE,QAAC,cAAD;MACE,QAAQ,EAAEhB,YADZ;MAEE,cAAc,EAAES;IAFlB;MAAA;MAAA;MAAA;IAAA,QADF,EAKGP,gBAAgB,CAACU,MAAjB,KAA4B,CAA5B,iBAAiC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALpC,EAMGV,gBAAgB,CAACU,MAAjB,GAA0B,CAA1B,IACCV,gBAAgB,CAACW,GAAjB,CAAsBR,OAAD,iBACnB,QAAC,WAAD;MAEE,KAAK,EAAEA,OAAO,CAACS,KAFjB;MAGE,MAAM,EAAET,OAAO,CAACU,MAHlB;MAIE,IAAI,EAAEV,OAAO,CAACC;IAJhB,GACOD,OAAO,CAACW,EADf;MAAA;MAAA;MAAA;IAAA,QADF,CAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA7DD;;GAAMlB,Q;;KAAAA,Q;AA+DN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}